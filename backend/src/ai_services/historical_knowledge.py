"""
Historical Knowledge AI
Provides historical context for Western-themed stories
"""

from typing import Optional
from anthropic import AsyncAnthropic

class HistoricalKnowledgeAI:
    """IA pour les connaissances historiques du Western"""
    
    def __init__(self, api_key: str, model_name: str = "claude-3-haiku-20240307"):
        """Initialise l'IA avec la cl√© API Anthropic"""
        self.client = AsyncAnthropic(api_key=api_key)
        self.model = model_name
        self.is_enabled = False
        
    def enable(self):
        """Active les informations historiques"""
        self.is_enabled = True
        print("ü§ñ Informations historiques activ√©es")
    
    def disable(self):
        """D√©sactive les informations historiques"""
        self.is_enabled = False
        print("ü§ñ Informations historiques d√©sactiv√©es")
    
    async def get_historical_context(self, text: str) -> Optional[str]:
        """G√©n√®re des informations historiques pour le texte donn√©"""
        if not self.is_enabled:
            return None
            
        try:
            # Construire le prompt
            prompt = (
                "Tu es un expert en histoire du Western am√©ricain. "
                "Analyse ce texte et fournis 2-3 phrases d'informations historiques pertinentes. "
                "R√©ponds en fran√ßais, de mani√®re √©ducative mais accessible. "
                "Concentre-toi sur les √©l√©ments historiques comme les armes, lieux, personnages ou la culture de l'√©poque.\n\n"
                f"Texte √† analyser:\n{text}\n\n"
                "Informations historiques:"
            )
            
            # Appeler l'API Anthropic
            message = await self.client.messages.create(
                model=self.model,
                max_tokens=150,
                temperature=0.7,
                messages=[{
                    "role": "user",
                    "content": prompt
                }]
            )
            
            return message.content[0].text if message.content else None
            
        except Exception as e:
            print(f"‚ùå Erreur lors de la g√©n√©ration du contexte historique: {e}")
            return None